buildscript {
    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:1.4.0.RELEASE")
        classpath 'com.bmuschko:gradle-docker-plugin:3.0.3'
    }
}

apply plugin: 'application'
apply plugin: 'groovy'
apply plugin: 'idea'
apply plugin: 'spring-boot'
apply plugin: 'com.bmuschko.docker-java-application'

import com.bmuschko.gradle.docker.tasks.image.Dockerfile
import com.bmuschko.gradle.docker.tasks.image.DockerBuildImage

sourceCompatibility = JavaVersion.VERSION_1_8
targetCompatibility = JavaVersion.VERSION_1_8
mainClassName = "org.llc.archive.Application"
applicationName = "llc-archives"

repositories {
    mavenCentral()
    jcenter()
}

jar {
    baseName = 'llc-archives'
    version = '0.1.0'
}

springBoot {
    mainClass = 'org.llc.archive.Application'
}

bootRepackage {
    mainClass = 'org.llc.archive.Application'
}

dependencies {
    compile 'org.slf4j:slf4j-api:1.+'

    compile 'org:jaudiotagger:2.+'
    compile "org.codehaus.groovy:groovy-all:2.+"
    compile 'com.amazonaws:aws-java-sdk-s3:1.+'
    compile('com.rometools:rome:1.6.1')

    compile("org.springframework.boot:spring-boot-starter-actuator")
    compile("org.springframework.boot:spring-boot-autoconfigure")
    compile("org.springframework.boot:spring-boot-starter-web")
    compile("org.springframework.boot:spring-boot-starter-data-rest")
    compile("org.springframework.boot:spring-boot-starter-data-jpa")
    compile("org.springframework.boot:spring-boot-starter-security")
    compile('org.springframework.boot:spring-boot-starter-jdbc')
    compile 'com.google.guava:guava:19.0'

    compile 'org.apache.commons:commons-dbcp2:2.+'
    compile 'org.postgresql:postgresql:9.+'

    testCompile "junit:junit:4.+"
    testCompile 'cglib:cglib-nodep:3.+'
    testCompile 'commons-io:commons-io:2.+'
    testCompile "org.spockframework:spock-core:1.0-groovy-2.4"
    testCompile 'org.springframework.boot:spring-boot-starter-test'
    testCompile('com.athaydes:spock-reports:1.+') {
        transitive = false
    }
}

task stage(type: Copy, dependsOn: [clean, build]) {
    from jar.archivePath
    into project.rootDir
    rename {
        'app.jar'
    }
}
stage.mustRunAfter(clean)

clean << {
    project.file('app.jar').delete()
}

task wrapper(type: Wrapper) {
    gradleVersion = '3.0'
}

task buildDocker(type: DockerBuildImage) {
    dependsOn   stage
    if (System.env.DOCKER_HOST) {
        url = "$System.env.DOCKER_HOST".replace("tcp","https")
        if (System.env.DOCKER_CERT_PATH) {
            certPath = new File(System.env.DOCKER_CERT_PATH)
        }
    }
    inputDir = file('.')
    tag = 'llc/llc-archives'
}
